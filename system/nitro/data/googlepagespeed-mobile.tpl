{
 "kind": "pagespeedonline#result",
 "id": "http://205.147.109.142/",
 "responseCode": 200,
 "title": "Your Store",
 "score": 58,
 "pageStats": {
  "numberResources": 80,
  "numberHosts": 7,
  "totalRequestBytes": "7230",
  "numberStaticResources": 70,
  "htmlResponseBytes": "109768",
  "cssResponseBytes": "400693",
  "imageResponseBytes": "501819",
  "javascriptResponseBytes": "1370926",
  "otherResponseBytes": "83369",
  "numberJsResources": 8,
  "numberCssResources": 8
 },
 "formattedResults": {
  "locale": "en_US",
  "ruleResults": {
   "AvoidLandingPageRedirects": {
    "localizedRuleName": "Avoid landing page redirects",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your page has no redirects. Learn more about avoiding landing page redirects.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/AvoidRedirects"
        }
       ]
      }
     }
    ]
   },
   "AvoidPlugins": {
    "localizedRuleName": "Avoid plugins",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your page does not appear to use plugins, which would prevent content from being usable on many platforms. Learn more about the importance of avoiding plugins.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/AvoidPlugins"
        }
       ]
      }
     }
    ]
   },
   "ConfigureViewport": {
    "localizedRuleName": "Configure the viewport",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your page specifies a viewport matching the device's size, which allows it to render properly on all devices. Learn more about configuring viewports.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/ConfigureViewport"
        }
       ]
      }
     }
    ]
   },
   "EnableGzipCompression": {
    "localizedRuleName": "Enable compression",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "You have compression enabled. Learn more about enabling compression.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/EnableCompression"
        }
       ]
      }
     }
    ]
   },
   "LeverageBrowserCaching": {
    "localizedRuleName": "Leverage browser caching",
    "ruleImpact": 48.74888392857143,
    "urlBlocks": [
     {
      "header": {
       "format": "Setting an expiry date or a maximum age in the HTTP headers for static resources instructs the browser to load previously downloaded resources from local disk rather than over the network."
      }
     },
     {
      "header": {
       "format": "Leverage browser caching for the following cacheable resources:",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/LeverageBrowserCaching"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/bootstrap/css/bootstrap.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/bootstrap/js/bootstrap.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/common.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/font-awesome/css/font-awesome.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/jquery/jquery-2.1.1.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/jquery/owl-carousel/owl.carousel.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/fonts/KelsonRegular/kelson_sans_regular-webfont.woff"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/fonts/ShrutiRegular/shruti-webfont.woff"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/image/facebook-logo.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/image/google-plus.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/image/twitter.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/stylesheet/pavreassurance.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/stylesheet/stylesheet.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/banners/power%20tool%201-1140x300.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/banners/power%20tool1-1140x300.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/burgerking-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/canon-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/cocacola-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/dell-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/disney-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/harley-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/nfl-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/nintendo-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/redbull-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/sony-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/starbucks-130x100.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/Black%20&%20Decker%20Angle%20Grinder%204inch%20Model%20G720R-200x200.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/Black%20&%20Decker%20Drill%20Machine%2010%20mm%20550%20W%20Model%20KR504RE-200x200.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/bosch/1053-200x200.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/bosch/364-200x200.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/1-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/14-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/19-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/22-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/25-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/28-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/3-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/32-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/34-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/36-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/39-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/41-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/42-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/45-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/5-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/52-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/53-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/56-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/59-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/61-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/66-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/69-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/72-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/74-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/76-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/78-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/8-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/86-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/89-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/93-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/97-110x150.jpg"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/catalog/logo.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 (expiration not specified)",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/payment%20methods.png"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 ($2)",
         "args": [
          {
           "type": "URL",
           "value": "https://static.doubleclick.net/instream/ad_status.js"
          },
          {
           "type": "DURATION",
           "value": "15 minutes"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "MainResourceServerResponseTime": {
    "localizedRuleName": "Reduce server response time",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your server responded quickly. Learn more about server response time optimization.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/Server"
        }
       ]
      }
     }
    ]
   },
   "MinifyCss": {
    "localizedRuleName": "Minify CSS",
    "ruleImpact": 0.20639999999999997,
    "urlBlocks": [
     {
      "header": {
       "format": "Compacting CSS code can save many bytes of data and speed up download and parse times."
      }
     },
     {
      "header": {
       "format": "Minify CSS for the following resources to reduce their size by $2 ($3 reduction).",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/MinifyResources"
        },
        {
         "type": "BYTES",
         "value": "1.2KiB"
        },
        {
         "type": "PERCENTAGE",
         "value": "20%"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "Minifying $1 could save $2 ($3 reduction) after compression.",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/stylesheet/stylesheet.css"
          },
          {
           "type": "BYTES",
           "value": "1.2KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "20%"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "MinifyHTML": {
    "localizedRuleName": "Minify HTML",
    "ruleImpact": 0.1111,
    "urlBlocks": [
     {
      "header": {
       "format": "Compacting HTML code, including any inline JavaScript and CSS contained in it, can save many bytes of data and speed up download and parse times."
      }
     },
     {
      "header": {
       "format": "Minify HTML for the following resources to reduce their size by $2 ($3 reduction).",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/MinifyResources"
        },
        {
         "type": "BYTES",
         "value": "1KiB"
        },
        {
         "type": "PERCENTAGE",
         "value": "10%"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "Minifying $1 could save $2 ($3 reduction) after compression.",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/"
          },
          {
           "type": "BYTES",
           "value": "1KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "10%"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "MinifyJavaScript": {
    "localizedRuleName": "Minify JavaScript",
    "ruleImpact": 0.37900000000000006,
    "urlBlocks": [
     {
      "header": {
       "format": "Compacting JavaScript code can save many bytes of data and speed up downloading, parsing, and execution time."
      }
     },
     {
      "header": {
       "format": "Minify JavaScript for the following resources to reduce their size by $2 ($3 reduction).",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/MinifyResources"
        },
        {
         "type": "BYTES",
         "value": "3KiB"
        },
        {
         "type": "PERCENTAGE",
         "value": "1%"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "Minifying $1 could save $2 ($3 reduction) after compression.",
         "args": [
          {
           "type": "URL",
           "value": "https://s.ytimg.com/yts/jsbin/html5player-new-en_US-vflVBD1Nz/html5player-new.js"
          },
          {
           "type": "BYTES",
           "value": "2.4KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "1%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Minifying $1 could save $2 ($3 reduction) after compression.",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/common.js"
          },
          {
           "type": "BYTES",
           "value": "617B"
          },
          {
           "type": "PERCENTAGE",
           "value": "20%"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "MinimizeRenderBlockingResources": {
    "localizedRuleName": "Eliminate render-blocking JavaScript and CSS in above-the-fold content",
    "ruleImpact": 24.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your page has $1 blocking script resources and $2 blocking CSS resources. This causes a delay in rendering your page.",
       "args": [
        {
         "type": "INT_LITERAL",
         "value": "4"
        },
        {
         "type": "INT_LITERAL",
         "value": "7"
        }
       ]
      }
     },
     {
      "header": {
       "format": "None of the above-the-fold content on your page could be rendered without waiting for the following resources to load. Try to defer or asynchronously load blocking resources, or inline the critical portions of those resources directly in the HTML."
      }
     },
     {
      "header": {
       "format": "Remove render-blocking JavaScript:",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/BlockingJS"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/jquery/jquery-2.1.1.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/bootstrap/js/bootstrap.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/common.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js"
          }
         ]
        }
       }
      ]
     },
     {
      "header": {
       "format": "Optimize CSS Delivery of the following:",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/OptimizeCSSDelivery"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/bootstrap/css/bootstrap.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/font-awesome/css/font-awesome.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://fonts.googleapis.com/css?family=Open+Sans:400,400i,300,700"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/stylesheet/stylesheet.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/javascript/jquery/owl-carousel/owl.carousel.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/catalog/view/theme/default/stylesheet/pavreassurance.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/index.php?route=module/ne/css&box=1"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "OptimizeImages": {
    "localizedRuleName": "Optimize images",
    "ruleImpact": 4.341599999999999,
    "urlBlocks": [
     {
      "header": {
       "format": "Properly formatting and compressing images can save many bytes of data."
      }
     },
     {
      "header": {
       "format": "Optimize the following images to reduce their size by $2 ($3 reduction).",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/OptimizeImages"
        },
        {
         "type": "BYTES",
         "value": "29.1KiB"
        },
        {
         "type": "PERCENTAGE",
         "value": "9%"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/banners/power%20tool1-1140x300.jpg"
          },
          {
           "type": "BYTES",
           "value": "3.3KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "4%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/catalog/logo.png"
          },
          {
           "type": "BYTES",
           "value": "3KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "46%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/starbucks-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "2.6KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "17%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/banners/power%20tool%201-1140x300.jpg"
          },
          {
           "type": "BYTES",
           "value": "2.5KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "3%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/cocacola-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "2.3KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "23%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/disney-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "2.2KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "56%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/sony-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "1.7KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "63%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/burgerking-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "1.6KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "11%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/dell-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "1.3KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "29%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/redbull-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "1.1KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "19%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/nfl-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "1.1KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "12%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/canon-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "1KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "28%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/harley-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "940B"
          },
          {
           "type": "PERCENTAGE",
           "value": "8%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/catalog/demo/manufacturer/nintendo-130x100.png"
          },
          {
           "type": "BYTES",
           "value": "859B"
          },
          {
           "type": "PERCENTAGE",
           "value": "20%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/bosch/1053-200x200.jpg"
          },
          {
           "type": "BYTES",
           "value": "728B"
          },
          {
           "type": "PERCENTAGE",
           "value": "7%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/Black%20&%20Decker%20Angle%20Grinder%204inch%20Model%20G720R-200x200.jpg"
          },
          {
           "type": "BYTES",
           "value": "603B"
          },
          {
           "type": "PERCENTAGE",
           "value": "11%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/Black%20&%20Decker%20Drill%20Machine%2010%20mm%20550%20W%20Model%20KR504RE-200x200.jpg"
          },
          {
           "type": "BYTES",
           "value": "570B"
          },
          {
           "type": "PERCENTAGE",
           "value": "10%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/74-110x150.jpg"
          },
          {
           "type": "BYTES",
           "value": "564B"
          },
          {
           "type": "PERCENTAGE",
           "value": "12%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/bosch/364-200x200.jpg"
          },
          {
           "type": "BYTES",
           "value": "557B"
          },
          {
           "type": "PERCENTAGE",
           "value": "11%"
          }
         ]
        }
       },
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "http://205.147.109.142/image/cache/data/categories/25-110x150.jpg"
          },
          {
           "type": "BYTES",
           "value": "529B"
          },
          {
           "type": "PERCENTAGE",
           "value": "11%"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "PrioritizeVisibleContent": {
    "localizedRuleName": "Prioritize visible content",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "You have the above-the-fold content properly prioritized. Learn more about prioritizing visible content.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/PrioritizeVisibleContent"
        }
       ]
      }
     }
    ]
   },
   "SizeContentToViewport": {
    "localizedRuleName": "Size content to viewport",
    "ruleImpact": 4.797054738512645,
    "urlBlocks": [
     {
      "header": {
       "format": "The page content is too wide for the viewport, forcing the user to scroll horizontally. Size the page content to the viewport to provide a better user experience.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/SizeContentToViewport"
        }
       ]
      }
     },
     {
      "header": {
       "format": "The page content is $1 CSS pixels wide, but the viewport is only $2 CSS pixels wide. The following elements fall outside the viewport:",
       "args": [
        {
         "type": "INT_LITERAL",
         "value": "615"
        },
        {
         "type": "INT_LITERAL",
         "value": "320"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "The element $1 falls outside the viewport.",
         "args": [
          {
           "type": "STRING_LITERAL",
           "value": "\u003cimg src=\"image/payment methods.png\"\u003e"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "SizeTapTargetsAppropriately": {
    "localizedRuleName": "Size tap targets appropriately",
    "ruleImpact": 0.08095800303592512,
    "urlBlocks": [
     {
      "header": {
       "format": "Some of the links/buttons on your webpage may be too small for a user to easily tap on a touchscreen. Consider making these tap targets larger to provide a better user experience.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/SizeTapTargetsAppropriately"
        }
       ]
      }
     },
     {
      "header": {
       "format": "The following tap targets are close to other nearby tap targets and may need additional spacing around them."
      },
      "urls": [
       {
        "result": {
         "format": "The tap target $1 and $2 others are close to other tap targets $3.",
         "args": [
          {
           "type": "STRING_LITERAL",
           "value": "\u003cdiv class=\"owl-buttons\"\u003e\u003c/div\u003e"
          },
          {
           "type": "INT_LITERAL",
           "value": "3"
          },
          {
           "type": "SNAPSHOT_RECT",
           "value": "final"
          }
         ]
        }
       },
       {
        "result": {
         "format": "The tap target $1 and $2 others are close to other tap targets $3.",
         "args": [
          {
           "type": "STRING_LITERAL",
           "value": "\u003cdiv class=\"owl-buttons\"\u003e\u003c/div\u003e"
          },
          {
           "type": "INT_LITERAL",
           "value": "3"
          },
          {
           "type": "SNAPSHOT_RECT",
           "value": "final"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "UseLegibleFontSizes": {
    "localizedRuleName": "Use legible font sizes",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "The text on your page is legible. Learn more about using legible font sizes.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/UseLegibleFontSizes"
        }
       ]
      }
     }
    ]
   }
  }
 },
 "version": {
  "major": 1,
  "minor": 15
 }
}

