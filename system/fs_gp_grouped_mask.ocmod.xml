<?xml version="1.0" encoding="utf-8"?>
<modification>
	<code>fs_gp_grouped_mask</code>
	<name>Grouped Product - Grouped Mask</name>
	<version>6.1.0</version>
	<author>Fabio Messina - fabiome77@hotmail.it</author>
	<link>http://www.fabiom7.com</link>
<file path="catalog/controller/product/category.php">
	<operation>
		<search><![CDATA[
		public function index() {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>		
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($result['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];
			
			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min) . '/' . $this->currency->format($gp_price_max);
				}
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min);
				}
			}
		}
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
			$data['categories'][] = array(
			]]></search>		
		<add position="before"><![CDATA[
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_category_width'), $this->config->get('config_image_category_height'));
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('config_image_category_width'), $this->config->get('config_image_category_height'));
				}
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
			$data['categories'][] = array(
			]]></search>		
		<add position="after"><![CDATA[
					'image'  => $image,
		]]></add>
	</operation>
	
	
	
</file>
<file path="catalog/controller/product/manufacturer.php">
	<operation>
		<search><![CDATA[
		public function info() {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>		
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($result['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min) . '/' . $this->currency->format($gp_price_max);
				}
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min);
				}
			}
		}
		]]></add>
	</operation>
</file>
<file path="catalog/controller/product/search.php">
	<operation>
		<search><![CDATA[
		public function index() {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>		
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($result['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min) . '/' . $this->currency->format($gp_price_max);
				}
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min);
				}
			}
		}
		]]></add>
	</operation>
</file>
<file path="catalog/controller/product/compare.php">
	<operation>
		<search><![CDATA[
		public function index() {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][$product_id] = array(
		]]></search>
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($product_info['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $product_info['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $product_info['tax_class_id'], $this->config->get('config_tax')));
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $product_info['tax_class_id'], $this->config->get('config_tax')));
			}
		}
		]]></add>
	</operation>
</file>
<file path="catalog/controller/module/bestseller.php">
	<operation>
		<search><![CDATA[
		public function index($setting) {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($result['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min) . '/' . $this->currency->format($gp_price_max);
				}
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min);
				}
			}
		}
		]]></add>
	</operation>
</file>
<file path="catalog/controller/module/featured.php">
	<operation>
		<search><![CDATA[
		public function index($setting) {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($product_info['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $product_info['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $product_info['tax_class_id'], $this->config->get('config_tax')));
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $product_info['tax_class_id'], $this->config->get('config_tax')));
			}
		}
		]]></add>
	</operation>
</file>
<file path="catalog/controller/module/latest.php">
	<operation>
		<search><![CDATA[
		public function index($setting) {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($result['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min) . '/' . $this->currency->format($gp_price_max);
				}
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $result['tax_class_id'], $this->config->get('config_tax')));

				if ($tax) {
					$tax = $this->currency->format($gp_price_min);
				}
			}
		}
		]]></add>
	</operation>
</file>
<file path="catalog/controller/account/wishlist.php">
	<operation>
		<search><![CDATA[
		public function index() {
		]]></search>
		<add position="after"><![CDATA[
		$this->load->language('product/gp_grouped');
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[
		$data['products'][] = array(
		]]></search>
		<add position="before"><![CDATA[
		if ($price && $is_gp = $this->model_catalog_product->getGroupedProductGrouped($product_info['product_id'])) {
			$gp_price_min = $is_gp['gp_price_min'];
			$gp_price_max = $is_gp['gp_price_max'];

			if ($gp_price_min[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_min,1));
				$gp_price_min = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}
			if ($gp_price_max[0] == '#') {
				$child_info = $this->model_catalog_product->getProduct(substr($gp_price_max,1));
				$gp_price_max = $child_info['special'] ? $child_info['special'] : $child_info['price'];
			}

			if ($gp_price_min && $gp_price_max) {
				$price = $this->language->get('text_gp_price_min') . $this->currency->format($this->tax->calculate($gp_price_min, $product_info['tax_class_id'], $this->config->get('config_tax'))) . $this->language->get('text_gp_price_max') . $this->currency->format($this->tax->calculate($gp_price_max, $product_info['tax_class_id'], $this->config->get('config_tax')));
			} else {
				$price = $this->language->get('text_gp_price_start') . $this->currency->format($this->tax->calculate($gp_price_min, $product_info['tax_class_id'], $this->config->get('config_tax')));
			}
		}
		]]></add>
	</operation>
</file>
</modification>
