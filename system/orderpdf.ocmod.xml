<modification>
  <name>PDF Invoice For orders (cartbinder@gmail.com)</name>
  <version>2.2</version>
  <link>http://store.cartbinder.com/</link>
  <author>CartBinder</author>
  <code>pifomdev</code>
    <file path="admin/view/template/sale/order_list.tpl">
    <operation>
      <search>
        <![CDATA[
        <button type="submit" id="button-invoice" form="form-order" formaction="<?php echo $invoice; ?>" data-toggle="tooltip" title="<?php echo $button_invoice_print; ?>" class="btn btn-info"><i class="fa fa-print"></i></button>
        ]]>
      </search>
      <add position="after">
        <![CDATA[ 
      <button type="submit" id="button-pdf" form="form-order" formaction="<?php echo $pdf; ?>" data-toggle="tooltip" title="Tax Invoice(PDF)" class="btn btn-info"><i class="fa fa-file-pdf-o"></i></button>
        ]]>
      </add>
    </operation>
    <operation>
      <search>
        <![CDATA[
        $('#button-shipping, #button-invoice').prop('disabled', true);
        ]]>
      </search>
      <add position="after">
        <![CDATA[   
        $('#button-pdf').prop('disabled', true);
        ]]>
      </add>
    </operation>
     <operation>
      <search>
        <![CDATA[
        $('#button-invoice').prop('disabled', false);
        ]]>
      </search>
      <add position="after">
        <![CDATA[   
        $('#button-pdf').prop('disabled', false);
        ]]>
      </add>
    </operation>
    
  </file>
<file path="admin/language/*/sale/order.php">
    <operation>
      <search>
        <![CDATA[$_['heading_title']]]>
      </search>
      <add position="before">
        <![CDATA[ 
         $_['text_vattin'] = "Vat/Tin: ";
        ]]>
      </add>
    </operation>
  </file>
  <file path="admin/controller/sale/order.php">
    <operation>
      <search>
        <![CDATA[
        $data['invoice'] = $this->url->link('sale/order/invoice', 'token=' . $this->session->data['token'], 'SSL');
        ]]>
      </search>
      <add position="after">
        <![CDATA[ 
        $data['pdf'] = $this->url->link('sale/order/pdf', 'token=' . $this->session->data['token'], 'SSL');
        ]]>
      </add>
    </operation>
    <operation>
      <search>
        <![CDATA[public function invoice() {]]>
      </search>
      <add position="before">
        <![CDATA[   

            public function pdf() {

    $this->load->language('sale/order');

    $data['title'] = $this->language->get('text_invoice');

    if ($this->request->server['HTTPS']) {
      $data['base'] = HTTPS_SERVER;
    } else {
      $data['base'] = HTTP_SERVER;
    }

    if (is_file(DIR_IMAGE . $this->config->get('config_logo'))) {
      $data['logo'] = HTTP_CATALOG . 'image/' . $this->config->get('config_logo');
    } else {
      $data['logo'] = '';
    }
    
    $data['direction'] = $this->language->get('direction');
    $data['lang'] = $this->language->get('code');

    $data['text_invoice'] = $this->language->get('text_invoice');
    $data['text_order_detail'] = $this->language->get('text_order_detail');
    $data['text_order_id'] = $this->language->get('text_order_id');
    $data['text_date_added'] = $this->language->get('text_date_added');
    $data['text_telephone'] = $this->language->get('text_telephone');
    $data['text_fax'] = $this->language->get('text_fax');
    $data['text_email'] = $this->language->get('text_email');
    $data['text_website'] = $this->language->get('text_website');
    $data['text_to'] = $this->language->get('text_to');
  $data['text_vattin']  = $this->language->get('text_vattin');
    $data['text_ship_to'] = $this->language->get('text_ship_to');
    $data['text_payment_method'] = $this->language->get('text_payment_method');
    $data['text_shipping_method'] = $this->language->get('text_shipping_method');

    $data['column_product'] = $this->language->get('column_product');
    $data['column_model'] = $this->language->get('column_model');
    $data['column_quantity'] = $this->language->get('column_quantity');
    $data['column_price'] = $this->language->get('column_price');
    $data['column_total'] = $this->language->get('column_total');
    $data['column_image'] = "Image";$data['column_comment'] = $this->language->get('column_comment'); require_once('../tcpdf/tcpdf.php');
    $pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);$pdf->SetCreator(PDF_CREATOR);$pdf->SetAuthor($this->config->get('config_owner'));$pdf->SetTitle('Order PDF');$pdf->SetSubject('PDF Invoice');$pdf->SetKeywords('TCPDF, PDF Invoice');$pdf->setPrintHeader(false);$pdf->setFooterData(array(0,64,0), array(0,64,128));$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

    $this->load->model('sale/order');

    $this->load->model('setting/setting');

    $data['orders'] = array();
    $orders = array();

    if (isset($this->request->post['selected'])) {
      $orders = $this->request->post['selected'];
    } elseif (isset($this->request->get['order_id'])) {
      $orders[] = $this->request->get['order_id'];
    }

    foreach ($orders as $order_id) {
      $order_info = $this->model_sale_order->getorder($order_id);

      if ($order_info) {
        $store_info = $this->model_setting_setting->getSetting('config', $order_info['store_id']);

        if ($store_info) {
          $store_address = $store_info['config_address'];
          $store_email = $store_info['config_email'];
          $store_telephone = $store_info['config_telephone'];
          $store_fax = $store_info['config_fax'];
        } else {
          $store_address = $this->config->get('config_address');
          $store_email = $this->config->get('config_email');
          $store_telephone = $this->config->get('config_telephone');
          $store_fax = $this->config->get('config_fax');
        }

        if ($order_info['invoice_no']) {
          $invoice_no = $order_info['invoice_prefix'] . $order_info['invoice_no'];
        } else {
          $invoice_no = '';
        }

        if ($order_info['payment_address_format']) {
          $format = $order_info['payment_address_format'];
        } else {
          $format = '{firstname} {lastname}' . "\n " . '{company}' .  "\n " . '{address_1}' .  "\n " . '{address_2}' .  "\n " . '{city} {postcode}' .  "\n " . '{zone}' . "\n " . '{country}';
        }

        $find = array(
          '{firstname}',
          '{lastname}',
          '{company}',
          '{address_1}',
          '{address_2}',
          '{city}',
          '{postcode}',
          '{zone}',
          '{zone_code}',
          '{country}'
        );

        $replace = array(
          'firstname' => $order_info['payment_firstname'],
          'lastname'  => $order_info['payment_lastname'],
          'company'   => $order_info['payment_company'],
          'address_1' => $order_info['payment_address_1'],
          'address_2' => $order_info['payment_address_2'],
          'city'      => $order_info['payment_city'],
          'postcode'  => $order_info['payment_postcode'],
          'zone'      => $order_info['payment_zone'],
          'zone_code' => $order_info['payment_zone_code'],
          'country'   => $order_info['payment_country']
        );

        $payment_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

        if ($order_info['shipping_address_format']) {
          $format = $order_info['shipping_address_format'];
        } else {
          $format = '{firstname} {lastname}' .  "\n " . '{company}' .  "\n " . '{address_1}' .  "\n " . '{address_2}' .  "\n ". '{city} {postcode}' .  "\n " . '{zone}' .  "\n " . '{country}';
        }
        $pdf->SetFont($this->config->get('pdforders_fontstyle'), '',$this->config->get('pdforders_fontsize') , '', true);
        $find = array(
          '{firstname}',
          '{lastname}',
          '{company}',
          '{address_1}',
          '{address_2}',
          '{city}',
          '{postcode}',
          '{zone}',
          '{zone_code}',
          '{country}'
        );

        $replace = array(
          'firstname' => $order_info['shipping_firstname'],
          'lastname'  => $order_info['shipping_lastname'],
          'company'   => $order_info['shipping_company'],
          'address_1' => $order_info['shipping_address_1'],
          'address_2' => $order_info['shipping_address_2'],
          'city'      => $order_info['shipping_city'],
          'postcode'  => $order_info['shipping_postcode'],
          'zone'      => $order_info['shipping_zone'],
          'zone_code' => $order_info['shipping_zone_code'],
          'country'   => $order_info['shipping_country']
        );

        $shipping_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

        $this->load->model('tool/upload');
        $this->load->model('tool/image');

        $product_data = array();

        $products = $this->model_sale_order->getorderProducts($order_id);
        $productcount  = count($products);$addextrarows = false;
        if($this->config->get('pdforders_numberproducts') > $productcount) {
          $addextrarows = true;
        }
        foreach ($products as $product) {
          $option_data = array();

          $options = $this->model_sale_order->getorderOptions($order_id, $product['order_product_id']);

          foreach ($options as $option) {
            if ($option['type'] != 'file') {
              $value = $option['value'];
            } else {
              $upload_info = $this->model_tool_upload->getUploadByCode($option['value']);

              if ($upload_info) {
                $value = $upload_info['name'];
              } else {
                $value = '';
              }
            }

            $option_data[] = array(
              'name'  => $option['name'],
              'value' => $value
            );
          }
          if($this->config->get('pdforders_showimage')) {
            $image = $this->model_sale_order->getProductimage($product['product_id']);

           
            if (is_file(DIR_IMAGE . $image)) {
              $image = $this->model_tool_image->resize($image, 60, 60);
              $image = str_replace(' ','%20',$image);
            } else {
              $image = $this->model_tool_image->resize('no_image.png', 60, 60);
            }

          } else {
            $image = "";
          } $tbl ="";
          $product_data[] = array(
            'name'     => $product['name'],
            'thumb'     => $image,
            'model'    => $product['model'],
            'option'   => $option_data,
            'quantity' => $product['quantity'],
            'price'    => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
            'total'    => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value'])
          );
        }
      
        $pdf->AddPage($this->config->get('pdforders_orientation'), $this->config->get('pdforders_format'));
       
        $voucher_data = array();

        $total_data = array();

        $totals = $this->model_sale_order->getorderTotals($order_id);

        foreach ($totals as $total) {
          $total_data[] = array(
            'title' => $total['title'],
            'text'  => $this->currency->format($total['value'], $order_info['currency_code'], $order_info['currency_value']),
          );
        } 
        
        if($data['logo'] && $this->config->get('pdforders_logo')) { 
          $tbl .=  '<table cellpadding="1" cellspacing="1" border="0" ><tr style="text-align:left;"><td><img src="' . $data['logo'] . '" border="0" width="auto" /></td><td align="right">'.$data['text_invoice'].'#' . $order_id . '</td></tr></table>';
        } else {
          $tbl .=  '<table cellpadding="1" cellspacing="1" border="0" ><tr style="text-align:left;"><td>'.$data['text_invoice'].'#' . $order_id . '</td></tr></table>';
        }

        $tbl .= '<table border="0" cellpadding="4">';

        $tbl .= '<tbody><tr><td><b>'.$order_info['store_name'].'</b><br/><b>Address: </b> '.nl2br($store_address).'<br><br><b>'.$data['text_telephone'].'</b> '.$store_telephone . '<br />';
         if (($this->config->get('pdforders_vattin'))) { 
          $tbl .= '<b>'.$data['text_vattin'].'</b>'.$this->config->get('pdforders_vattin').'<br /> ';
        }
        if ($store_fax) { 
          $tbl .= '<b>'.$data['text_fax'].'</b>'.$store_fax.'<br /> ';
        }

        $tbl .= '<b>' . $data['text_email'] . '</b>  '.rtrim($store_email, '/').'<br/><b>'.$data['text_website'].'</b><a href=' . rtrim($order_info['store_url'], '/') . '>'.rtrim($order_info['store_url'], '/').'</a></td><td><b>'.$data['text_date_added'].'</b> '.date($this->language->get('date_format_short'), strtotime($order_info['date_added'])).'<br />';

        if ($invoice_no) {
          $tbl .= '<b>'.$data['text_invoice'].'</b> '.$invoice_no.'<br />';
        }

        $tbl .= '<b>' . $data['text_order_id'].'</b> '.$order_id.'<br /><b>'.$data['text_payment_method'].'</b> '.$order_info['payment_method'].'<br/>';

        if ($order_info['shipping_method']) { 
          $tbl .= '<b>'.$data['text_shipping_method'].'</b> '.$order_info['shipping_method'].'<br />';
        }

        $tbl .= '</td></tr></tbody></table>';

     $tbl .= '<table border="0.2" cellpadding="4"><thead><tr><td style="width: 50%;"><b>' . $data['text_to'] . '</b></td><td style="width: 50%;"><b>' . $data['text_ship_to'] . '</b></td></tr></thead><tbody><tr><td>' . $payment_address . '<br>'.$order_info['email'].'<br>'.$order_info['telephone'].'</td><td >' . $shipping_address . '</td></tr></tbody></table>';
        

         $tbl .= '<table border="0.2"  cellpadding="4" ><thead><tr>';
        if($this->config->get('pdforders_showimage')) {
          $tbl .= '<td style="width: 12%;" align="left"><b>' . $data['column_image'] . '</b></td>';
          $tbl .= '<td style="width: 38%;" align="left"><b>' . $data['column_product'] . '</b></td>';
        }else {
          $tbl .= '<td style="width: 50%;" align="left"><b>' . $data['column_product'] . '</b></td>';
        }
         $tbl .= '<td style="width: 14%;" align="left"><b>' . $data['column_model'] . '</b></td><td style="width: 13%;" align="right"><b>' . $data['column_quantity'] . '</b></td><td style="width: 11%;" align="right"><b>' . $data['column_price'] . '</b></td><td style="width: 12%;" align="right"><b>' . $data['column_total'] . '</b></td></tr></thead>';
        $tbl .= '<tbody>';
        foreach ($product_data as $product) { 
          $tbl .= '<tr>';
           if($this->config->get('pdforders_showimage')) {
            if($product['thumb']) {
              $tbl .='<td style="width: 12%;" align="left"><img src="'.$product['thumb'].'" alt="'.$product['name'].'" title="'.$product['name'].'" class="img-thumbnail" /></td>';
             }
             $tbl .= '<td style="width: 38%;" align="left">'.$product['name'];
            }else {
            $tbl .= '<td style="width: 50%;" align="left">'.$product['name'];
            }
          
            foreach ($product['option'] as $option) {
            $tbl .= '<br /><small> - ' . $option['name'] . ': ' . $option['value'] . '</small>';
            }
          $tbl .= ' </td><td style="width: 14%;" align="left">' . $product['model'] . '</td><td style="width: 13%;" align="right">' . $product['quantity'] . '</td><td style="width: 11%;" align="right">' . str_replace('₹','Rs.',$product['price']) . '</td><td style="width: 12%;" align="right">' . str_replace('₹','Rs.',$product['total']) . '</td></tr>';
        }
         if($this->config->get('pdforders_showimage')) {$colspan = 5;} else {$colspan = 4;}
        if($this->config->get('pdforders_addextrarows') && $addextrarows) { 
          for ($i=0; $i < $this->config->get('pdforders_numberextrarows'); $i++) { 
            $tbl .= '<tr><td colspan="'.$colspan.'"></td><td></td></tr>';
          }
        }

        foreach ($voucher_data as $voucher) { 
          $tbl .= '<tr><td>' . $voucher['description'] . '</td><td></td><td align="right">1</td><td align="right">' . str_replace('₹','Rs.',$voucher['amount']) . '</td><td align="right">' . str_replace('₹','Rs.',$voucher['amount']) . '</td></tr>';
        }
       
        foreach ($total_data as $total) { 
          $tbl .= '<tr><td align="right" colspan="'.$colspan.'"><b>' . $total['title'] . '</b></td><td align="right">' . str_replace('₹','Rs.',$total['text']) . '</td></tr>';
        }
        $tbl .= '</tbody></table>';
        if ($order_info['comment']) { 
          $tbl .= '<table border="0" cellpadding="4"><thead><tr><td><b>' . $data['column_comment'] . '</b></td></tr></thead><tbody><tr><td>' .  nl2br($order_info['comment']) . '</td></tr></tbody></table>'; 
        }

    
        $message = $this->config->get('pdforders_textfooter');
        if (isset($message[$this->config->get('config_language_id')])) { 
         $tbl .= '<br><br><br>';
          $tbl .= '<table border="0" cellpadding="4"><tbody><tr><td align="left">' . $message[$this->config->get('config_language_id')]['name'] . '</td></tr></tbody></table>'; 
        }

        $pdf->writeHTML($tbl, true, false, false, false, '');
      }
    }
    $pdf->Output('Invoice-Order'.$order_id.'.pdf', 'I');

  }
    
]]>
      </add>
    </operation>
  </file>
   <file path="admin/model/sale/order.php">
     <operation>
      <search><![CDATA[public function createInvoiceNo($order_id) {]]></search>
      <add position="before"><![CDATA[
          public function getProductimage($product_id) {
    $query = $this->db->query("SELECT image FROM `" . DB_PREFIX . "product` WHERE product_id = '".$product_id."'");
    return $query->row['image'];
  }
  ]]></add>
    </operation>
  </file>



  


  <file path="catalog/controller/account/order.php">
    <operation>
      <search>
        <![CDATA[
       $data['orders'][] = array(
        ]]>
      </search>
      <add position="after">
        <![CDATA[ 
      'pdf'       => $this->url->link('account/order/pdf', 'order_id=' . $result['order_id'], 'SSL'),
      'order_status_id' => $this->model_account_order->getOrderstatusid($result['order_id']),
        ]]>
      </add>
    </operation>
    <operation>
      <search>
        <![CDATA[
       $order_total = $this->model_account_order->getTotalOrders();
        ]]>
      </search>
      <add position="after">
        <![CDATA[ 
     $data['pdforders_order_status_customer'] = $this->config->get('pdforders_order_status_customer');
        ]]>
      </add>
    </operation>
    
    <operation>
      <search>
        <![CDATA[public function reorder() {]]>
      </search>
      <add position="before">
        <![CDATA[   
      public function pdf() {

    $this->load->language('account/order');

    if (isset($this->request->get['order_id'])) {
      $order_id = $this->request->get['order_id'];
    } else {
      $order_id = 0;
    }

    if (!$this->customer->isLogged()) {
      $this->session->data['redirect'] = $this->url->link('account/order/info', 'order_id=' . $order_id, 'SSL');

      $this->response->redirect($this->url->link('account/login', '', 'SSL'));
    }


    $data['title'] = $this->language->get('text_invoice');

    if ($this->request->server['HTTPS']) {
      $data['base'] = HTTPS_SERVER;
    } else {
      $data['base'] = HTTP_SERVER;
    }

    if (is_file(DIR_IMAGE . $this->config->get('config_logo'))) {
      $data['logo'] = HTTP_SERVER . 'image/' . $this->config->get('config_logo');
    } else {
      $data['logo'] = '';
    }
    
    $data['direction'] = $this->language->get('direction');
    $data['lang'] = $this->language->get('code');

    $data['text_invoice'] = $this->language->get('text_invoice');
    $data['text_order_detail'] = $this->language->get('text_order_detail');
    $data['text_order_id'] = $this->language->get('text_order_id');
    $data['text_date_added'] = $this->language->get('text_date_added');
    $data['text_telephone'] = $this->language->get('text_telephone');
    $data['text_fax'] = $this->language->get('text_fax');
    $data['text_email'] = $this->language->get('text_email');
    $data['text_website'] = $this->language->get('text_website');
  $data['text_vattin']  = $this->language->get('text_vattin');
    $data['text_to'] = $this->language->get('text_to');
    $data['text_ship_to'] = $this->language->get('text_ship_to');
    $data['text_payment_method'] = $this->language->get('text_payment_method');
    $data['text_shipping_method'] = $this->language->get('text_shipping_method');

    $data['column_product'] = $this->language->get('column_product_name');
    $data['column_model'] = $this->language->get('column_model');
    $data['column_quantity'] = $this->language->get('column_quantity');
    $data['column_price'] = $this->language->get('column_price');
    $data['column_total'] = $this->language->get('column_total');$data['column_image'] = "Image";$data['column_comment'] = $this->language->get('column_comment');require_once('tcpdf/tcpdf.php');$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, $this->config->get('pdforders_format'), true, 'UTF-8', false);$pdf->SetCreator(PDF_CREATOR);$pdf->SetAuthor($this->config->get('config_owner'));$pdf->SetTitle('Order PDF');$pdf->SetSubject('PDF Invoice');$pdf->SetKeywords('TCPDF, PDF Invoice');$pdf->setPrintHeader(false);$pdf->setFooterData(array(0,64,0), array(0,64,128));$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

    $this->load->model('account/order');
    $this->load->model('setting/setting');

  $order_info = $this->model_account_order->getOrder($order_id);

  if ($order_info) {
        $store_info = $this->model_setting_setting->getSetting('config', $order_info['store_id']);

        if ($store_info) {
          $store_address = $store_info['config_address'];
          $store_email = $store_info['config_email'];
          $store_telephone = $store_info['config_telephone'];
          $store_fax = $store_info['config_fax'];
        } else {
          $store_address = $this->config->get('config_address');
          $store_email = $this->config->get('config_email');
          $store_telephone = $this->config->get('config_telephone');
          $store_fax = $this->config->get('config_fax');
        }

        if ($order_info['invoice_no']) {
          $invoice_no = $order_info['invoice_prefix'] . $order_info['invoice_no'];
        } else {
          $invoice_no = '';
        }

        if ($order_info['payment_address_format']) {
          $format = $order_info['payment_address_format'];
        } else {
          $format = '{firstname} {lastname}' . "\n " . '{company}' .  "\n " . '{address_1}' .  "\n " . '{address_2}' .  "\n " . '{city} {postcode}' .  "\n " . '{zone}' . "\n " . '{country}';
        }

        $find = array(
          '{firstname}',
          '{lastname}',
          '{company}',
          '{address_1}',
          '{address_2}',
          '{city}',
          '{postcode}',
          '{zone}',
          '{zone_code}',
          '{country}'
        );

        $replace = array(
          'firstname' => $order_info['payment_firstname'],
          'lastname'  => $order_info['payment_lastname'],
          'company'   => $order_info['payment_company'],
          'address_1' => $order_info['payment_address_1'],
          'address_2' => $order_info['payment_address_2'],
          'city'      => $order_info['payment_city'],
          'postcode'  => $order_info['payment_postcode'],
          'zone'      => $order_info['payment_zone'],
          'zone_code' => $order_info['payment_zone_code'],
          'country'   => $order_info['payment_country']
        );
        $pdf->SetFont($this->config->get('pdforders_fontstyle'), '',$this->config->get('pdforders_fontsize') , '', true);
        $payment_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

        if ($order_info['shipping_address_format']) {
          $format = $order_info['shipping_address_format'];
        } else {
          $format = '{firstname} {lastname}' .  "\n " . '{company}' .  "\n " . '{address_1}' .  "\n " . '{address_2}' .  "\n ". '{city} {postcode}' .  "\n " . '{zone}' .  "\n " . '{country}';
        }

        $find = array(
          '{firstname}',
          '{lastname}',
          '{company}',
          '{address_1}',
          '{address_2}',
          '{city}',
          '{postcode}',
          '{zone}',
          '{zone_code}',
          '{country}'
        );

        $replace = array(
          'firstname' => $order_info['shipping_firstname'],
          'lastname'  => $order_info['shipping_lastname'],
          'company'   => $order_info['shipping_company'],
          'address_1' => $order_info['shipping_address_1'],
          'address_2' => $order_info['shipping_address_2'],
          'city'      => $order_info['shipping_city'],
          'postcode'  => $order_info['shipping_postcode'],
          'zone'      => $order_info['shipping_zone'],
          'zone_code' => $order_info['shipping_zone_code'],
          'country'   => $order_info['shipping_country']
        );

        $shipping_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

        $this->load->model('tool/upload');
        $this->load->model('tool/image');

        $product_data = array();

        $products = $this->model_account_order->getorderProducts($order_id);

        $productcount  = count($products);$addextrarows = false;
        if($this->config->get('pdforders_numberproducts') > $productcount) {
          $addextrarows = true;
        }

        foreach ($products as $product) {
          $option_data = array();

          $options = $this->model_account_order->getOrderOptions($this->request->get['order_id'], $product['order_product_id']);

          foreach ($options as $option) {
            if ($option['type'] != 'file') {
              $value = $option['value'];
            } else {
              $upload_info = $this->model_tool_upload->getUploadByCode($option['value']);

              if ($upload_info) {
                $value = $upload_info['name'];
              } else {
                $value = '';
              }
            }

            $option_data[] = array(
              'name'  => $option['name'],
              'value' => $value
            );
          }

          if($this->config->get('pdforders_showimage')) {
              $image = $this->model_account_order->getProductimage($product['product_id']);

              if (is_file(DIR_IMAGE . $image)) {
                $image = $this->model_tool_image->resize($image, 60, 60);
                $image = str_replace(' ','%20',$image);
              } else {
                $image = $this->model_tool_image->resize('no_image.png', 60, 60);
              }
          } else {
            $image = "";
          } 

          $product_data[] = array(
            'name'     => $product['name'],
            'thumb'     => $image,
            'model'    => $product['model'],
            'option'   => $option_data,
            'quantity' => $product['quantity'],
            'price'    => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
            'total'    => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value'])
          );
        }
        $pdf->AddPage($this->config->get('pdforders_orientation'), $this->config->get('pdforders_format'));
        $tbl = "";
        $voucher_data = array();

        $total_data = array();

        $totals = $this->model_account_order->getOrderTotals($order_id);

        foreach ($totals as $total) {
          $total_data[] = array(
            'title' => $total['title'],
            'text'  => $this->currency->format($total['value'], $order_info['currency_code'], $order_info['currency_value']),
          );
        } 
        
        if($data['logo'] && $this->config->get('pdforders_logo')) { 
          $tbl .=  '<table cellpadding="1" cellspacing="1" border="0" ><tr style="text-align:left;"><td><img src="' . $data['logo'] . '" border="0" width="auto" /></td><td align="right">'.$data['text_invoice'].'#' . $order_id . '</td></tr></table>';
        } else {
          $tbl .=  '<table cellpadding="1" cellspacing="1" border="0" ><tr style="text-align:left;"><td>'.$data['text_invoice'].'#' . $order_id . '</td></tr></table>';
        }

         $tbl .= '<table border="0" cellpadding="4">';

        $tbl .= '<tbody><tr><td><b>'.$order_info['store_name'].'</b><br/><b>Address: </b> '.nl2br($store_address).'<br><br><b>'.$data['text_telephone'].'</b> '.$store_telephone . '<br />';
         if (!($this->config->get('pdforders_vattin'))) { 
          $tbl .= '<b>'.$data['text_vattin'].'</b>'.$this->config->get('pdforders_vattin').'<br /> ';
        }
        if ($store_fax) { 
          $tbl .= '<b>'.$data['text_fax'].'</b>'.$store_fax.'<br /> ';
        }

        $tbl .= '<b>' . $data['text_email'] . '</b>'.rtrim($store_email, '/').'<br/><b>'.$data['text_website'].'</b><a href=' . rtrim($order_info['store_url'], '/') . '>'.rtrim($order_info['store_url'], '/').'</a></td><td><b>'.$data['text_date_added'].'</b> '.date($this->language->get('date_format_short'), strtotime($order_info['date_added'])).'<br />';

        if ($invoice_no) {
          $tbl .= '<b>'.$data['text_invoice'].'</b> '.$invoice_no.'<br />';
        }

        $tbl .= '<b>' . $data['text_order_id'].'</b> '.$order_id.'<br /><b>'.$data['text_payment_method'].'</b> '.$order_info['payment_method'].'<br/>';

        if ($order_info['shipping_method']) { 
          $tbl .= '<b>'.$data['text_shipping_method'].'</b> '.$order_info['shipping_method'].'<br />';
        }

        $tbl .= '</td></tr></tbody></table>';

        $tbl .= '<table border="0.2" cellpadding="4"><thead><tr><td style="width: 50%;"><b>' . $data['text_to'] . '</b></td><td style="width: 50%;"><b>' . $data['text_ship_to'] . '</b></td></tr></thead><tbody><tr><td>' . $payment_address . '<br>'.$order_info['email'].'<br>'.$order_info['telephone'].'</td><td >' . $shipping_address . '</td></tr></tbody></table>';
        
        $tbl .= '<table border="0.2"  cellpadding="4" ><thead><tr>';
        if($this->config->get('pdforders_showimage')) {
          $tbl .= '<td style="width: 12%;" align="left"><b>' . $data['column_image'] . '</b></td>';
          $tbl .= '<td style="width: 38%;" align="left"><b>' . $data['column_product'] . '</b></td>';
        }else {
          $tbl .= '<td style="width: 50%;" align="left"><b>' . $data['column_product'] . '</b></td>';
        }
         $tbl .= '<td style="width: 14%;" align="left"><b>' . $data['column_model'] . '</b></td><td style="width: 13%;" align="right"><b>' . $data['column_quantity'] . '</b></td><td style="width: 11%;" align="right"><b>' . $data['column_price'] . '</b></td><td style="width: 12%;" align="right"><b>' . $data['column_total'] . '</b></td></tr></thead>';
        $tbl .= '<tbody>';
        foreach ($product_data as $product) { 
          $tbl .= '<tr>';
           if($this->config->get('pdforders_showimage')) {
            if($product['thumb']) {
              $tbl .='<td style="width: 12%;" align="left"><img src="'.$product['thumb'].'" alt="'.$product['name'].'" title="'.$product['name'].'" class="img-thumbnail" /></td>';
             }
             $tbl .= '<td style="width: 38%;" align="left">'.$product['name'];
            }else {
            $tbl .= '<td style="width: 50%;" align="left">'.$product['name'];
            }
          
            foreach ($product['option'] as $option) {
            $tbl .= '<br /><small> - ' . $option['name'] . ': ' . $option['value'] . '</small>';
            }
          $tbl .= ' </td><td style="width: 14%;" align="left">' . $product['model'] . '</td><td style="width: 13%;" align="right">' . $product['quantity'] . '</td><td style="width: 11%;" align="right">' . $product['price'] . '</td><td style="width: 12%;" align="right">' . $product['total'] . '</td></tr>';
        }
        if($this->config->get('pdforders_showimage')) {$colspan = 5;} else {$colspan = 4;}
        if($this->config->get('pdforders_addextrarows') && $addextrarows) { 
          for ($i=0; $i < $this->config->get('pdforders_numberextrarows'); $i++) { 
            $tbl .= '<tr><td colspan="'.$colspan.'"></td><td></td></tr>';
          }
        }

        foreach ($voucher_data as $voucher) { 
          $tbl .= '<tr><td>' . $voucher['description'] . '</td><td align="right">1</td><td align="right">' . $voucher['amount'] . '</td><td align="right">' . $voucher['amount'] . '</td></tr>';
        }
         
        foreach ($total_data as $total) { 
          $tbl .= '<tr><td align="right" colspan="'.$colspan.'"><b>' . $total['title'] . '</b></td><td align="right">' . $total['text'] . '</td></tr>';
        }
        $tbl .= '</tbody></table>';
        if ($order_info['comment']) { 
          $tbl .= '<table border="0" cellpadding="4"><thead><tr><td><b>' . $data['column_comment'] . '</b></td></tr></thead><tbody><tr><td>' .  nl2br($order_info['comment']) . '</td></tr></tbody></table>'; 
        }
    $message = $this->config->get('pdforders_textfooter');
        if (isset($message[$this->config->get('config_language_id')])) { 
         $tbl .= '<br><br><br>';
          $tbl .= '<table border="0" cellpadding="4"><tbody><tr><td align="left">' . $message[$this->config->get('config_language_id')]['name'] . '</td></tr></tbody></table>'; 
        }
        $pdf->writeHTML($tbl, true, false, false, false, '');
      }
    
    $pdf->Output('Invoice-Order'.$order_id.'.pdf', 'I');

  }
]]>
      </add>
    </operation>
  </file>
   <file path="catalog/language/*/account/order.php">
     <operation>
      <search><![CDATA[$_['error_reorder'] ]]></search>
      <add position="before"><![CDATA[
         $_['text_telephone']           = 'Telephone:';
$_['text_fax']                 = 'Fax:';
$_['text_website']             = 'Web Site:';
$_['text_email']               = 'E-Mail:';
$_['text_vattin']              = "Vat/Tin: ";
$_['text_to']                  = 'To';
$_['text_invoice']             = 'Invoice';
$_['text_ship_to']             = 'Ship To (if different address)';
$_['column_product_name']      = 'Product';
$_['column_image']           = 'Image';
  ]]></add>
    </operation>
  </file>
  <file path="catalog/model/account/order.php">
     <operation>
      <search><![CDATA[public function getOrderProducts($order_id) {]]></search>
      <add position="before"><![CDATA[
          public function getProductimage($product_id) {
    $query = $this->db->query("SELECT image FROM `" . DB_PREFIX . "product` WHERE product_id = '".$product_id."'");
    return $query->row['image'];
  }
  public function getOrderstatusid($order_id) {
    $query = $this->db->query("SELECT order_status_id FROM " . DB_PREFIX . "order WHERE order_id = '" . (int)$order_id . "'");

    return $query->row['order_status_id'];
  }
  ]]></add>
    </operation>
  </file>

   
  <file path="catalog/view/theme/*/template/account/order_list.tpl">
     <operation>
      <search><![CDATA[<td class="text-right"><?php echo $column_total; ?></td>]]></search>
      <add position="after"><![CDATA[
       <td class="text-right">Tax Invoice(PDF)</td>
      ]]></add>
    </operation>
    <operation>
      <search><![CDATA[<td class="text-right"><?php echo $order['total']; ?></td>]]></search>
      <add position="after"><![CDATA[
        <?php if(in_array($order['order_status_id'],$pdforders_order_status_customer)) { ?>
         <td class="text-right"><a href="<?php echo $order['pdf']; ?>" target="_blank" data-toggle="tooltip" title="Download Tax Invoice(PDF)" class="btn btn-info"><i class="fa fa-file-pdf-o"></i></a></td>
        <?php } else { ?>
         <td class="text-right"><a disabled data-toggle="tooltip" title="PDF not available" class="btn btn-info"><i class="fa fa-file-pdf-o"></i></a></td>
        <?php } ?>
  ]]></add>
    </operation>
  </file>

 <file path="catalog/model/checkout/order.php">
  <operation>
      <search><![CDATA[if (!$order_info['order_status_id'] && $order_status_id) {]]></search>
      <add position="before"><![CDATA[
        if($this->config->get('pdforders_autogenerateinvoiceno')) {
          $query = $this->db->query("SELECT MAX(invoice_no) AS invoice_no FROM `" . DB_PREFIX . "order` WHERE invoice_prefix = '" . $this->db->escape($order_info['invoice_prefix']) . "'");

          if ($query->row['invoice_no']) {
            $invoice_no = $query->row['invoice_no'] + 1;
          } else {
            $invoice_no = 1;
          }

          $this->db->query("UPDATE `" . DB_PREFIX . "order` SET invoice_no = '" . (int)$invoice_no . "', invoice_prefix = '" . $this->db->escape($order_info['invoice_prefix']) . "' WHERE order_id = '" . (int)$order_id . "'");
      }
  ]]></add>
    </operation>
     <operation>
      <search><![CDATA[public function deleteOrder($order_id) {]]></search>
      <add position="before"><![CDATA[
          public function createPdf($order_id) {
    
    $this->load->language('account/order');
      $data['title'] = $this->language->get('text_invoice');

      if ($this->request->server['HTTPS']) {
        $data['base'] = HTTPS_SERVER;
      } else {
        $data['base'] = HTTP_SERVER;
      }

      if (is_file(DIR_IMAGE . $this->config->get('config_logo'))) {
        $data['logo'] = HTTP_SERVER . 'image/' . $this->config->get('config_logo');
      } else {
        $data['logo'] = '';
      }
      
      $data['direction'] = $this->language->get('direction');
      $data['lang'] = $this->language->get('code');

      $data['text_invoice'] = $this->language->get('text_invoice');
      $data['text_order_detail'] = $this->language->get('text_order_detail');
      $data['text_order_id'] = $this->language->get('text_order_id');
      $data['text_date_added'] = $this->language->get('text_date_added');
      $data['text_telephone'] = $this->language->get('text_telephone');
      $data['text_fax'] = $this->language->get('text_fax');
      $data['text_email'] = $this->language->get('text_email');
      $data['text_website'] = $this->language->get('text_website');
$data['text_vattin']  = $this->language->get('text_vattin');
      $data['text_to'] = $this->language->get('text_to');
      $data['text_ship_to'] = $this->language->get('text_ship_to');
      $data['text_payment_method'] = $this->language->get('text_payment_method');
      $data['text_shipping_method'] = $this->language->get('text_shipping_method');

      $data['column_product'] = $this->language->get('column_product_name');
      $data['column_model'] = $this->language->get('column_model');
      $data['column_quantity'] = $this->language->get('column_quantity');
      $data['column_price'] = $this->language->get('column_price');
      $data['column_total'] = $this->language->get('column_total');$data['column_image'] = "Image";$data['column_comment'] = $this->language->get('column_comment');

      require_once('tcpdf/tcpdf.php');$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, $this->config->get('pdforders_format'), true, 'UTF-8', false);$pdf->SetCreator(PDF_CREATOR);$pdf->SetAuthor($this->config->get('config_owner'));$pdf->SetTitle('Order PDF');$pdf->SetSubject('PDF Invoice');$pdf->SetKeywords('TCPDF, PDF Invoice');$pdf->setPrintHeader(false);$pdf->setFooterData(array(0,64,0), array(0,64,128));$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

      $this->load->model('account/order');
      $this->load->model('setting/setting');

      $order_info = $this->getOrder($order_id);
      
    if ($order_info) {
          $store_info = $this->model_setting_setting->getSetting('config', $order_info['store_id']);

          if ($store_info) {
            $store_address = $store_info['config_address'];
            $store_email = $store_info['config_email'];
            $store_telephone = $store_info['config_telephone'];
            $store_fax = $store_info['config_fax'];
          } else {
            $store_address = $this->config->get('config_address');
            $store_email = $this->config->get('config_email');
            $store_telephone = $this->config->get('config_telephone');
            $store_fax = $this->config->get('config_fax');
          }

          if ($order_info['invoice_no']) {
            $invoice_no = $order_info['invoice_prefix'] . $order_info['invoice_no'];
          } else {
            $invoice_no = '';
          }

          if ($order_info['payment_address_format']) {
            $format = $order_info['payment_address_format'];
          } else {
            $format = '{firstname} {lastname}' . "\n " . '{company}' .  "\n " . '{address_1}' .  "\n " . '{address_2}' .  "\n " . '{city} {postcode}' .  "\n " . '{zone}' . "\n " . '{country}';
          }

          $find = array(
            '{firstname}',
            '{lastname}',
            '{company}',
            '{address_1}',
            '{address_2}',
            '{city}',
            '{postcode}',
            '{zone}',
            '{zone_code}',
            '{country}'
          );

          $replace = array(
            'firstname' => $order_info['payment_firstname'],
            'lastname'  => $order_info['payment_lastname'],
            'company'   => $order_info['payment_company'],
            'address_1' => $order_info['payment_address_1'],
            'address_2' => $order_info['payment_address_2'],
            'city'      => $order_info['payment_city'],
            'postcode'  => $order_info['payment_postcode'],
            'zone'      => $order_info['payment_zone'],
            'zone_code' => $order_info['payment_zone_code'],
            'country'   => $order_info['payment_country']
          );
          $pdf->SetFont($this->config->get('pdforders_fontstyle'), '',$this->config->get('pdforders_fontsize') , '', true);
          $payment_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

          if ($order_info['shipping_address_format']) {
            $format = $order_info['shipping_address_format'];
          } else {
            $format = '{firstname} {lastname}' .  "\n " . '{company}' .  "\n " . '{address_1}' .  "\n " . '{address_2}' .  "\n ". '{city} {postcode}' .  "\n " . '{zone}' .  "\n " . '{country}';
          }

          $find = array(
            '{firstname}',
            '{lastname}',
            '{company}',
            '{address_1}',
            '{address_2}',
            '{city}',
            '{postcode}',
            '{zone}',
            '{zone_code}',
            '{country}'
          );

          $replace = array(
            'firstname' => $order_info['shipping_firstname'],
            'lastname'  => $order_info['shipping_lastname'],
            'company'   => $order_info['shipping_company'],
            'address_1' => $order_info['shipping_address_1'],
            'address_2' => $order_info['shipping_address_2'],
            'city'      => $order_info['shipping_city'],
            'postcode'  => $order_info['shipping_postcode'],
            'zone'      => $order_info['shipping_zone'],
            'zone_code' => $order_info['shipping_zone_code'],
            'country'   => $order_info['shipping_country']
          );

          $shipping_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

          $this->load->model('tool/upload');
          $this->load->model('tool/image');

          $product_data = array();

          $products = $this->model_account_order->getorderProducts($order_id);

          $productcount  = count($products);$addextrarows = false;
          if($this->config->get('pdforders_numberproducts') > $productcount) {
            $addextrarows = true;
          }

          foreach ($products as $product) {
            $option_data = array();

            $options = $this->model_account_order->getOrderOptions($this->request->get['order_id'], $product['order_product_id']);

            foreach ($options as $option) {
              if ($option['type'] != 'file') {
                $value = $option['value'];
              } else {
                $upload_info = $this->model_tool_upload->getUploadByCode($option['value']);

                if ($upload_info) {
                  $value = $upload_info['name'];
                } else {
                  $value = '';
                }
              }

              $option_data[] = array(
                'name'  => $option['name'],
                'value' => $value
              );
            }

            if($this->config->get('pdforders_showimage')) {
                $image = $this->model_account_order->getProductimage($product['product_id']);

                if (is_file(DIR_IMAGE . $image)) {
                  $image = $this->model_tool_image->resize($image, 60, 60);
                  $image = str_replace(' ','%20',$image);
                } else {
                  $image = $this->model_tool_image->resize('no_image.png', 60, 60);
                }
            } else {
              $image = "";
            } 

            $product_data[] = array(
              'name'     => $product['name'],
              'thumb'     => $image,
              'model'    => $product['model'],
              'option'   => $option_data,
              'quantity' => $product['quantity'],
              'price'    => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
              'total'    => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value'])
            );
          }
          $pdf->AddPage($this->config->get('pdforders_orientation'), $this->config->get('pdforders_format'));
          $tbl = "";
          $voucher_data = array();

          $total_data = array();

          $totals = $this->model_account_order->getOrderTotals($order_id);

          foreach ($totals as $total) {
            $total_data[] = array(
              'title' => $total['title'],
              'text'  => $this->currency->format($total['value'], $order_info['currency_code'], $order_info['currency_value']),
            );
          } 
          
          if($data['logo'] && $this->config->get('pdforders_logo')) { 
            $tbl .=  '<table cellpadding="1" cellspacing="1" border="0" ><tr style="text-align:left;"><td><img src="' . $data['logo'] . '" border="0" width="auto" /></td><td align="right">'.$data['text_invoice'].'#' . $order_id . '</td></tr></table>';
          } else {
            $tbl .=  '<table cellpadding="1" cellspacing="1" border="0" ><tr style="text-align:left;"><td>'.$data['text_invoice'].'#' . $order_id . '</td></tr></table>';
          }

           $tbl .= '<table border="0" cellpadding="4">';

          $tbl .= '<tbody><tr><td><b>'.$order_info['store_name'].'</b><br/><b>Address: </b> '.nl2br($store_address).'<br><br><b>'.$data['text_telephone'].'</b> '.$store_telephone . '<br />';
          
          if (!($this->config->get('pdforders_vattin'))) { 
            $tbl .= '<b>'.$data['text_vattin'].'</b>'.$this->config->get('pdforders_vattin').'<br /> ';
          }
          if ($store_fax) { 
            $tbl .= '<b>'.$data['text_fax'].'</b>'.$store_fax.'<br /> ';
          }

          $tbl .= '<b>' . $data['text_email'] . '</b>'.rtrim($store_email, '/').'<br/><b>'.$data['text_website'].'</b><a href=' . rtrim($order_info['store_url'], '/') . '>'.rtrim($order_info['store_url'], '/').'</a></td><td><b>'.$data['text_date_added'].'</b> '.date($this->language->get('date_format_short'), strtotime($order_info['date_added'])).'<br />';

          if ($invoice_no) {
            $tbl .= '<b>'.$data['text_invoice'].'</b> '.$invoice_no.'<br />';
          }

          $tbl .= '<b>' . $data['text_order_id'].'</b> '.$order_id.'<br /><b>'.$data['text_payment_method'].'</b> '.$order_info['payment_method'].'<br/>';

          if ($order_info['shipping_method']) { 
            $tbl .= '<b>'.$data['text_shipping_method'].'</b> '.$order_info['shipping_method'].'<br />';
          }

          $tbl .= '</td></tr></tbody></table>';

          $tbl .= '<table border="0.2" cellpadding="4"><thead><tr><td style="width: 50%;"><b>' . $data['text_to'] . '</b></td><td style="width: 50%;"><b>' . $data['text_ship_to'] . '</b></td></tr></thead><tbody><tr><td>' . $payment_address . '<br>'.$order_info['email'].'<br>'.$order_info['telephone'].'</td><td >' . $shipping_address . '</td></tr></tbody></table>';
          
          $tbl .= '<table border="0.2"  cellpadding="4" ><thead><tr>';
          if($this->config->get('pdforders_showimage')) {
            $tbl .= '<td style="width: 12%;" align="left"><b>' . $data['column_image'] . '</b></td>';
            $tbl .= '<td style="width: 38%;" align="left"><b>' . $data['column_product'] . '</b></td>';
          }else {
            $tbl .= '<td style="width: 50%;" align="left"><b>' . $data['column_product'] . '</b></td>';
          }
           $tbl .= '<td style="width: 14%;" align="left"><b>' . $data['column_model'] . '</b></td><td style="width: 13%;" align="right"><b>' . $data['column_quantity'] . '</b></td><td style="width: 11%;" align="right"><b>' . $data['column_price'] . '</b></td><td style="width: 12%;" align="right"><b>' . $data['column_total'] . '</b></td></tr></thead>';
          $tbl .= '<tbody>';
          foreach ($product_data as $product) { 
            $tbl .= '<tr>';
             if($this->config->get('pdforders_showimage')) {
              if($product['thumb']) {
                $tbl .='<td style="width: 12%;" align="left"><img src="'.$product['thumb'].'" alt="'.$product['name'].'" title="'.$product['name'].'" class="img-thumbnail" /></td>';
               }
               $tbl .= '<td style="width: 38%;" align="left">'.$product['name'];
              }else {
              $tbl .= '<td style="width: 50%;" align="left">'.$product['name'];
              }
            
              foreach ($product['option'] as $option) {
              $tbl .= '<br /><small> - ' . $option['name'] . ': ' . $option['value'] . '</small>';
              }
            $tbl .= ' </td><td style="width: 14%;" align="left">' . $product['model'] . '</td><td style="width: 13%;" align="right">' . $product['quantity'] . '</td><td style="width: 11%;" align="right">' . $product['price'] . '</td><td style="width: 12%;" align="right">' . $product['total'] . '</td></tr>';
          }
          if($this->config->get('pdforders_showimage')) {$colspan = 5;} else {$colspan = 4;}
          if($this->config->get('pdforders_addextrarows') && $addextrarows) { 
            for ($i=0; $i < $this->config->get('pdforders_numberextrarows'); $i++) { 
              $tbl .= '<tr><td colspan="'.$colspan.'"></td><td></td></tr>';
            }
          }

          foreach ($voucher_data as $voucher) { 
            $tbl .= '<tr><td>' . $voucher['description'] . '</td><td align="right">1</td><td align="right">' . $voucher['amount'] . '</td><td align="right">' . $voucher['amount'] . '</td></tr>';
          }
           
          foreach ($total_data as $total) { 
            $tbl .= '<tr><td align="right" colspan="'.$colspan.'"><b>' . $total['title'] . '</b></td><td align="right">' . $total['text'] . '</td></tr>';
          }
          $tbl .= '</tbody></table>';
          if ($order_info['comment']) { 
            $tbl .= '<table border="0" cellpadding="4"><thead><tr><td><b>' . $data['column_comment'] . '</b></td></tr></thead><tbody><tr><td>' .  nl2br($order_info['comment']) . '</td></tr></tbody></table>'; 
          }

          $message = $this->config->get('pdforders_textfooter');
          if (isset($message[$this->config->get('config_language_id')])) { 
           $tbl .= '<br><br><br>';
            $tbl .= '<table border="0" cellpadding="4"><tbody><tr><td align="left">' . $message[$this->config->get('config_language_id')]['name'] . '</td></tr></tbody></table>'; 
          }
          
          $pdf->writeHTML($tbl, true, false, false, false, '');
      }

      $filename = DIR_DOWNLOAD."order".$order_id.".pdf";
      //pdf email data
     // $this->log->write(print_r($tbl,true));
      
      $pdf->Output($filename, 'F');
  }
  ]]></add>
    </operation>
     <operation>
      <search><![CDATA[$mail->setTo($order_info['email']);]]></search>
      <add position="after"><![CDATA[
        $pdforders_order_status_customer = $this->config->get('pdforders_order_status_customer');
        if ($this->config->get('pdforders_attachemail') && (in_array($order_status_id,$pdforders_order_status_customer))) {
          $this->createPdf($order_id);
          $mail->addAttachment(DIR_DOWNLOAD."order".$order_id.".pdf");
        }
    ]]></add>
    </operation>
    <operation>
      <search><![CDATA[if (in_array($order_info['order_status_id'], $this->config->get('config_complete_status'))) {]]></search>
      <add position="before"><![CDATA[
        if (is_file(DIR_DOWNLOAD."order".$order_id.".pdf")) {
          unlink(DIR_DOWNLOAD."order".$order_id.".pdf");
          $this->load->language('api/order');
        }
]]></add>
    </operation>
  </file>
</modification>
